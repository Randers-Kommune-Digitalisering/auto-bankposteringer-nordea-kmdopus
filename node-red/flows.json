[{"id":"8983772ca1c7d013","type":"tab","label":"Forsøg 1","disabled":false,"info":"","env":[]},{"id":"c61e25446fe03797","type":"tab","label":"Forsøg 2","disabled":false,"info":"","env":[]},{"id":"aff40520a8419466","type":"tab","label":"Datamanipulation","disabled":false,"info":"","env":[]},{"id":"9c575b636ce2c595","type":"tab","label":"hash med crypto.wz node","disabled":false,"info":"","env":[]},{"id":"b2c910a3562c542e","type":"tab","label":"Request, hardcoded hash","disabled":false,"info":"","env":[]},{"id":"9f33e58b08cc00ae","type":"tab","label":"OK hashing signature","disabled":false,"info":"","env":[]},{"id":"0bc16db685bd2e6a","type":"tab","label":"Encrypted HTTP POST","disabled":false,"info":"","env":[]},{"id":"db28c2d0ad9574a4","type":"group","z":"0bc16db685bd2e6a","name":"","style":{"stroke":"#ffC000","stroke-opacity":"0.6","label":true,"fill":"#ffefbf","fill-opacity":"0.35"},"nodes":["4842e2c0b66c1e52","98ead5170ca23623"],"x":54,"y":519,"w":272,"h":122},{"id":"90c6e6935c71b31c","type":"junction","z":"0bc16db685bd2e6a","x":340,"y":180,"wires":[["1f89911e49c2c23a","c10aec9905cba606"]]},{"id":"e7392728b4698670","type":"junction","z":"0bc16db685bd2e6a","x":960,"y":180,"wires":[["71b009d2dc511028"]]},{"id":"83b3d0eecedbd2c2","type":"junction","z":"0bc16db685bd2e6a","x":1220,"y":380,"wires":[["50266d8bdc73b7d5","41f8b116d6ce67c1"]]},{"id":"160b4ec1b061d426","type":"junction","z":"0bc16db685bd2e6a","x":1080,"y":460,"wires":[["83b3d0eecedbd2c2"]]},{"id":"85de60ed3c367397","type":"junction","z":"0bc16db685bd2e6a","x":580,"y":460,"wires":[["70fb91ddec980afe","afb3f33566f5fa50"]]},{"id":"aa7509d32bbd6a28","type":"junction","z":"0bc16db685bd2e6a","x":580,"y":380,"wires":[["3e3a2119b6ce7876"]]},{"id":"44fade9967adb646","type":"junction","z":"0bc16db685bd2e6a","x":1080,"y":380,"wires":[["83b3d0eecedbd2c2"]]},{"id":"e5347e83dbf94857","type":"tls-config","name":"test_cert","cert":"","key":"","ca":"","certname":"QSealC-NordeaDevPortal-2021.cer","keyname":"QSealC-NordeaDevPortal-2021.p12","caname":"","servername":"","verifyservercert":false,"alpnprotocol":""},{"id":"718e1576ed7ad36b","type":"http request","z":"8983772ca1c7d013","name":"hent accounts","method":"GET","ret":"obj","paytoqs":"ignore","url":"https://api.nordeaopenbanking.com/corporate/premium/v3/accounts/DK5036579260-USD/transactions","tls":"","persist":false,"proxy":"","insecureHTTPParser":true,"authType":"","senderr":false,"headers":[],"x":660,"y":320,"wires":[["da28141dd973c281"]]},{"id":"b74b625c34aeb70e","type":"inject","z":"8983772ca1c7d013","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"payload","payloadType":"msg","x":90,"y":40,"wires":[["0a506f0c6ade520d"]]},{"id":"da28141dd973c281","type":"debug","z":"8983772ca1c7d013","name":"Send request","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":850,"y":320,"wires":[]},{"id":"0304632634c2efaf","type":"change","z":"8983772ca1c7d013","name":"Set headers","rules":[{"t":"set","p":"headers","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"headers.Signature","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"headers.X-IBM-Client-Id","pt":"msg","to":"bff6e089c937b9d710e68c00d5114654","tot":"str"},{"t":"set","p":"headers.X-IBM-Client-Secret","pt":"msg","to":"d3cc01f5aa2be9d4946b9bc5834ea739","tot":"str"},{"t":"set","p":"headers.X-Nordea-Originating-Date","pt":"msg","to":"Tue, 25 Apr 2023 10:12:50 GMT","tot":"str"},{"t":"set","p":"headers.X-Nordea-Originating-Host","pt":"msg","to":"api.nordeaopenbanking.com","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":330,"y":440,"wires":[["0e0b554fa13cdf0a"]]},{"id":"7fc6b07ae141846f","type":"inject","z":"8983772ca1c7d013","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":100,"y":240,"wires":[["f65694a4206a2dc1"]]},{"id":"a61a6f80b22ac058","type":"debug","z":"8983772ca1c7d013","name":"debug 1","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":520,"y":120,"wires":[]},{"id":"0a506f0c6ade520d","type":"function","z":"8983772ca1c7d013","name":"Normalized signing string","func":"const claims = new Map();\n\nclaims.set('(request-target)', 'get /corporate/v2/accounts/');\nclaims.set('x-nordea-originating-host', 'open.nordea.com');\nclaims.set('x-nordea-originating-date', 'Fri, 20 Sep 2019 09:41:25 GMT');\n\nclass SignatureNormalizedStringBuilder {\n    constructor() {\n        this.builder = [];\n    }\n\n    append(key, value) {\n        if (this.builder.length > 0) {\n            this.builder.push('\\n');\n        }\n        this.builder.push(`${key}: ${value}`);\n        return this;\n    }\n\n    normalize() {\n        const normalizedSignature = this.builder.join('');\n        return normalizedSignature;\n    }\n}\n\nconst builder = new SignatureNormalizedStringBuilder();\nclaims.forEach((value, key) => builder.append(key, value));\nconst normalizedString = builder.normalize();\nconsole.log(`Normalized String: ${normalizedString}`);\n\n// Use `normalizedString` in your later nodes\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":290,"y":40,"wires":[["066c88a78eb2895c"]]},{"id":"2ab03cd1689cdce4","type":"function","z":"8983772ca1c7d013","name":"encoding","func":"const crypto = require('crypto');\n\nconst normalizedString = msg.normalizedString;\nconst privateKey = msg.privateKey;\n\nconst signer = crypto.createSign('RSA-SHA256');\nsigner.write(normalizedString);\nsigner.end();\n\nconst signature = signer.sign(privateKey, 'base64');\n\nmsg.signature = signature;\n\nconsole.log(`Signature: ${signature}`);\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":240,"y":120,"wires":[["a61a6f80b22ac058"]]},{"id":"066c88a78eb2895c","type":"change","z":"8983772ca1c7d013","name":"","rules":[{"t":"set","p":"privateKey","pt":"msg","to":"-----BEGIN PRIVATE KEY----- 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 yVqFjCLkbYGziS/7xyhtLRJw -----END PRIVATE KEY-----","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":270,"y":80,"wires":[["2ab03cd1689cdce4"]]},{"id":"57847321551d9b9f","type":"change","z":"8983772ca1c7d013","name":"Set elements in Signature","rules":[{"t":"set","p":"headers.Signature.keyId","pt":"msg","to":"headers.X-IBM-Client-Id","tot":"msg"},{"t":"set","p":"headers.Signature.algorithm","pt":"msg","to":"rsa-sha256","tot":"str"},{"t":"set","p":"headers.Signature.signature","pt":"msg","to":"d707r8QJ0GoYQXO5zSE2HzGpuHchrzUrie19J8tuqWV","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":370,"y":280,"wires":[["7acc69c933084a6e"]]},{"id":"7acc69c933084a6e","type":"function","z":"8983772ca1c7d013","name":"Set Signature","func":"const keyId = msg.headers.Signature.keyId;\nconst algorithm = msg.headers.Signature.algorithm;\nconst signature_headers = JSON.parse(msg.headers.Signature.headers);\nconst signature = msg.headers.Signature.signature;\n\nmsg.headers.Signature = `keyId=\"${keyId}\",algorithm=\"${algorithm}\",headers=\"${signature_headers}\",signature=\"${signature}\"`;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":340,"y":320,"wires":[["718e1576ed7ad36b"]]},{"id":"9d2812ba62ddad81","type":"function","z":"8983772ca1c7d013","name":"Set headers in Signature (+ endpoint)","func":"const request_target = \"https://api.nordeaopenbanking.com/corporate/premium/v4/accounts/DK5036579260-USD/transactions\";\nconst host = msg.headers['X-Nordea-Originating-Host'];\nconst date = msg.headers['X-Nordea-Originating-Date'];\n\nmsg.headers.Signature.headers = `${request_target}\" \"${host}\" \"${date}`;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1190,"y":240,"wires":[[]]},{"id":"a1faaca00e2ad169","type":"comment","z":"8983772ca1c7d013","name":"Problemer med headers i signature","info":"","x":1180,"y":280,"wires":[]},{"id":"0e0b554fa13cdf0a","type":"template","z":"8983772ca1c7d013","name":"Set Signature headers","field":"headers.Signature.headers","fieldType":"msg","format":"json","syntax":"mustache","template":"{\n    \"GET\": \"https://api.nordeaopenbanking.com/corporate/premium/v4/accounts/DK5036579260-USD/transactions\",\n    \"X-Nordea-Originating-Host\": \"{{msg.headers['X-Nordea-Originating-Date']}}\",\n    \"X-Nordea-Originating-Date\": \"{{msg.headers['X-Nordea-Originating-Date']}}\"\n}","output":"json","x":580,"y":440,"wires":[["d83ce521db62b543"]]},{"id":"8ab8ca3f5d815145","type":"debug","z":"8983772ca1c7d013","name":"debug 4","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1020,"y":440,"wires":[]},{"id":"d83ce521db62b543","type":"function","z":"8983772ca1c7d013","name":"function 1","func":"console.log(msg);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":860,"y":440,"wires":[["8ab8ca3f5d815145"]]},{"id":"f65694a4206a2dc1","type":"template","z":"8983772ca1c7d013","name":"Set Signature headers","field":"headers.Signature.headers","fieldType":"msg","format":"json","syntax":"mustache","template":"{\n    \"GET\": \"https://api.nordeaopenbanking.com/corporate/premium/v4/accounts/DK5036579260-USD/transactions\",\n    \"X-Nordea-Originating-Host\": \"{{msg.headers['X-Nordea-Originating-Date']}}\",\n    \"X-Nordea-Originating-Date\": \"{{msg.headers['X-Nordea-Originating-Date']}}\"\n}","output":"json","x":360,"y":240,"wires":[["57847321551d9b9f"]]},{"id":"ddd760d23f638c1b","type":"inject","z":"c61e25446fe03797","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"payload","payloadType":"msg","x":90,"y":40,"wires":[["2c5108f548776210"]]},{"id":"618e64317dc85349","type":"debug","z":"c61e25446fe03797","name":"debug 2","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":520,"y":120,"wires":[]},{"id":"2c5108f548776210","type":"function","z":"c61e25446fe03797","name":"Normalized signing string","func":"const claims = new Map();\n\nclaims.set('(request-target)', 'get /premium/v3/accounts');\nclaims.set('x-nordea-originating-host', 'open.nordea.com');\nclaims.set('x-nordea-originating-date', 'Fri, 20 Sep 2019 09:41:25 GMT');\n\nclass SignatureNormalizedStringBuilder {\n    constructor() {\n        this.builder = [];\n    }\n\n    append(key, value) {\n        if (this.builder.length > 0) {\n            this.builder.push('\\n');\n        }\n        this.builder.push(`${key}: ${value}`);\n        return this;\n    }\n\n    normalize() {\n        const normalizedSignature = this.builder.join('');\n        return normalizedSignature;\n    }\n}\n\nconst builder = new SignatureNormalizedStringBuilder();\nclaims.forEach((value, key) => builder.append(key, value));\nconst normalizedString = builder.normalize();\nconsole.log(`Normalized String: ${normalizedString}`);\n\n// Use `normalizedString` in your later nodes\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":290,"y":40,"wires":[["e7769743f143c6d6"]]},{"id":"61d0d3680cf7a845","type":"function","z":"c61e25446fe03797","name":"encoding","func":"const crypto = require('crypto');\n\nconst sign = crypto.createSign('sha256');\n\nsign.update(msg.normalizedString);\n\nconst privateKey = msg.privateKey; // your PEM-encoded private key\nconst signature = sign.sign(privateKey, 'base64');\nconsole.log(`Signature: ${signature}`);","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":240,"y":120,"wires":[["618e64317dc85349"]]},{"id":"e7769743f143c6d6","type":"change","z":"c61e25446fe03797","name":"","rules":[{"t":"set","p":"privateKey","pt":"msg","to":"-----BEGIN PRIVATE KEY----- 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 yVqFjCLkbYGziS/7xyhtLRJw -----END PRIVATE KEY-----","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":270,"y":80,"wires":[["61d0d3680cf7a845"]]},{"id":"9e0fc868fe7a2dde","type":"debug","z":"c61e25446fe03797","name":"tjek","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":850,"y":60,"wires":[]},{"id":"0bb4ee78bd91757a","type":"http request","z":"c61e25446fe03797","name":"hent accounts","method":"GET","ret":"obj","paytoqs":"ignore","url":"https://api.nordeaopenbanking.com/corporate/premium/v3/accounts","tls":"e5347e83dbf94857","persist":false,"proxy":"","insecureHTTPParser":true,"authType":"","senderr":false,"headers":[],"x":700,"y":60,"wires":[["9e0fc868fe7a2dde"]]},{"id":"bb02f6f9e9a31b8a","type":"inject","z":"aff40520a8419466","name":"eksempel","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"group_header\":{\"message_identification\":\"d005e48b6e32b4207b0079a7dd3f5fe8\",\"creation_date_time\":\"2023-04-24T12:25:44.238021Z\",\"http_code\":200},\"response\":{\"transactions\":[{\"currency\":\"USD\",\"narrative\":\" Adv.ref. 17000088824215\",\"status\":\"billed\",\"message\":\"Faktura 1234\",\"amount\":\"-11.01\",\"transaction_id\":\"2021111414389277\",\"booking_date\":\"2021-11-14\",\"value_date\":\"2021-11-14\",\"type_description\":\"Udenl. Betaling\",\"transaction_date\":\"2021-11-14\",\"payment_date\":\"2021-11-14\",\"original_currency\":\"EUR\",\"original_currency_amount\":\"10.00\",\"currency_rate\":\"1.10\",\"balance_after_transaction\":\"1015203.44\"},{\"currency\":\"DKK\",\"narrative\":\"Måske advisfelt\",\"status\":\"billed\",\"message\":\"Sikkert referencefelt\",\"amount\":\"1000\",\"transaction_id\":\"2021111414389278\",\"booking_date\":\"2021-11-30\",\"value_date\":\"2021-11-30\",\"type_description\":\"Overførsel\",\"transaction_date\":\"2021-11-30\",\"payment_date\":\"2021-11-30\",\"balance_after_transaction\":\"1016203.44\"}],\"_links\":[{\"rel\":\"self\",\"href\":\"/premium/v3/accounts/DK5036579260-USD/transactions?from_date=2021-11-14&to_date=2021-11-14\"}]}}","payloadType":"json","x":100,"y":40,"wires":[["3c17f3fa9efa7838"]]},{"id":"d46c63e1d4119363","type":"function","z":"aff40520a8419466","name":"Transform Data","func":"var transactions = msg.payload;\n\nfor(var i = 0; i < transactions.length; i++) {\n    // Apply your rules here and modify each transaction object\n    // Example rule - Rename the 'currency' key to 'Currency'\n    transactions[i].Currency = transactions[i].currency;\n    delete transactions[i].currency;\n}\n\nmsg.payload = transactions;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":300,"y":40,"wires":[["328085be39dc6983"]]},{"id":"328085be39dc6983","type":"csv","z":"aff40520a8419466","name":"Append to CSV File","sep":",","hdrin":"","hdrout":"all","multi":"one","ret":"\\r\\n","temp":"Artskonto, Omkostningssted, PSP-element, Profitcenter, Ordre, Debet/kredit, Beløb, Næste agent, Tekst, Betalingsart, Påligningsår, Betalingsmodtagernr., Betalingsmodtagernr.kode, Ydelsesmodtagernr., Ydelsesmodtagernr.kode, Ydelsesperiode fra, Ydelsesperiode til, Oplysningspligtnr., Oplysningspligtmodtagernr.kode, Oplysningspligtkode, Netværk, Operation, Mængde, Mængdeenhed, Referencenøgle","skip":"0","strings":true,"include_empty_strings":false,"include_null_values":false,"x":510,"y":40,"wires":[["3d2dd0c8699cce86"]]},{"id":"3d2dd0c8699cce86","type":"debug","z":"aff40520a8419466","name":"debug 7","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":700,"y":40,"wires":[]},{"id":"10a3b57b1ec29893","type":"csv","z":"aff40520a8419466","name":"CSV til JSON Array","sep":";","hdrin":true,"hdrout":"none","multi":"mult","ret":"\\n","temp":"","skip":"0","strings":true,"include_empty_strings":false,"include_null_values":true,"x":290,"y":140,"wires":[["682b9333052f2d31"]]},{"id":"3c17f3fa9efa7838","type":"file in","z":"aff40520a8419466","name":"Hent konteringsregler","filename":"/data/Nordea/konteringsregler.csv","filenameType":"str","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":300,"y":100,"wires":[["10a3b57b1ec29893"]]},{"id":"82d1b48762c80e74","type":"debug","z":"aff40520a8419466","name":"debug 8","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"konteringsregler","targetType":"msg","statusVal":"","statusType":"auto","x":620,"y":180,"wires":[]},{"id":"682b9333052f2d31","type":"change","z":"aff40520a8419466","name":"Gem JSON Array i msg.konteringsregler","rules":[{"t":"set","p":"konteringsregler","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":360,"y":180,"wires":[["82d1b48762c80e74"]]},{"id":"0b02d931ad796f85","type":"change","z":"aff40520a8419466","name":"Tæller til uplacerede","rules":[{"t":"set","p":"antal_uplacerede","pt":"msg","to":"0","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":280,"y":280,"wires":[[]]},{"id":"9ab28fecfed02475","type":"inject","z":"9c575b636ce2c595","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":100,"y":100,"wires":[["59d258d41bb76bd9"]]},{"id":"59d258d41bb76bd9","type":"change","z":"9c575b636ce2c595","name":"Set headers","rules":[{"t":"set","p":"headers","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"headers.x-ibm-client-id","pt":"msg","to":"bff6e089c937b9d710e68c00d5114654","tot":"str"},{"t":"set","p":"headers.x-ibm-client-secret","pt":"msg","to":"d3cc01f5aa2be9d4946b9bc5834ea739","tot":"str"},{"t":"set","p":"headers.x-nordea-originating-host","pt":"msg","to":"api.nordeaopenbanking.com","tot":"str"},{"t":"set","p":"req","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"req.method","pt":"msg","to":"GET","tot":"str"},{"t":"set","p":"req.url_path","pt":"msg","to":"https://api.nordeaopenbanking.com/corporate/premium/v3/accounts/DK5036579260-USD/transactions","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":270,"y":100,"wires":[["af3624b9e81057f9"]]},{"id":"7bbc39ec0cb08309","type":"comment","z":"9c575b636ce2c595","name":"Client Secret","info":"d3cc01f5aa2be9d4946b9bc5834ea739","x":90,"y":60,"wires":[]},{"id":"904b2d70c476d711","type":"http request","z":"9c575b636ce2c595","name":"hent accounts","method":"GET","ret":"obj","paytoqs":"ignore","url":"https://api.nordeaopenbanking.com/corporate/premium/v3/accounts/DK5036579260-USD/transactions","tls":"","persist":false,"proxy":"","insecureHTTPParser":true,"authType":"","senderr":false,"headers":[],"x":1060,"y":480,"wires":[["9ab230e0ac74e6e4"]]},{"id":"9ab230e0ac74e6e4","type":"debug","z":"9c575b636ce2c595","name":"Response","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1220,"y":480,"wires":[]},{"id":"025a51bffd4f264b","type":"function","z":"9c575b636ce2c595","name":"Set Signature (header only)","func":"const keyId = msg.headers['x-ibm-client-id'];\nconst algorithm = 'rsa-sha256';\nconst signatureHeaders = '(request-target) x-nordea-originating-host x-nordea-originating-date';\nconst signature = msg.hashedSignature;\n\nmsg.headers.signature = `keyId=\"${keyId}\", algorithm=\"${algorithm}\", headers=\"${signatureHeaders}\", signature=\"${signature}\"`;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":820,"y":440,"wires":[["904b2d70c476d711"]]},{"id":"aa11d0634b33e272","type":"comment","z":"9c575b636ce2c595","name":"\"Unspecified error with OBI authentication\"","info":"Mangler desuden data-parametre i url,\nsom sørger for at hente seneste hele \nhverdags posteringer.","x":880,"y":420,"wires":[]},{"id":"969dba44c98c19db","type":"hmac","z":"9c575b636ce2c595","name":"RSA-SHA256 kryptering","algorithm":"HmacSHA256","key":"key","value":"payload","x":530,"y":140,"wires":[["431c04f9285d3a33","dfa465c64b4d1d55"]]},{"id":"b49f25ad5a736b50","type":"change","z":"9c575b636ce2c595","name":"Definér private key","rules":[{"t":"set","p":"key","pt":"msg","to":"-----BEGIN PRIVATE KEY----- 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 yVqFjCLkbYGziS/7xyhtLRJw -----END PRIVATE KEY-----","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":510,"y":100,"wires":[["969dba44c98c19db"]]},{"id":"431c04f9285d3a33","type":"function","z":"9c575b636ce2c595","name":"Base64 encoding","func":"const hash = Buffer.from(msg.payload);\nconst base64EncodedString = hash.toString('base64');\n\nmsg.payload = base64EncodedString;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":510,"y":180,"wires":[["025a51bffd4f264b","84f2b4c0bcd9b0c8"]]},{"id":"c63f98a0b2198d03","type":"function","z":"9c575b636ce2c595","name":"Lav normalized string","func":"const requestTarget = msg.req.method.toLowerCase() + ' ' + msg.req.url_path;\nconst originatingHost = msg.headers['x-nordea-originating-host'];\nconst originatingDate = msg.headers['x-nordea-originating-date'];\n\nmsg.payload = `(request-target): ${requestTarget}\\n` +\n    `x-nordea-originating-host: ${originatingHost}\\n` +\n    `x-nordea-originating-date: ${originatingDate}`;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":520,"y":60,"wires":[["b49f25ad5a736b50","c6f3cf6a1bc3a2e4"]]},{"id":"af3624b9e81057f9","type":"function","z":"9c575b636ce2c595","name":"Generér dato","func":"const date = new Date();\nconst formattedDate = date.toUTCString();\n\nmsg.headers['x-nordea-originating-date'] = formattedDate;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":270,"y":140,"wires":[["c63f98a0b2198d03"]]},{"id":"c4377e2b6e105450","type":"comment","z":"9c575b636ce2c595","name":"Om msg.normalizedString","info":"Det er uklart ud fra dokumentationen,\nom signing string skal indeholde key:value\npairs eller bare en af delene.\nNordea udviklere sig ok til key:value.","x":550,"y":40,"wires":[]},{"id":"84f2b4c0bcd9b0c8","type":"debug","z":"9c575b636ce2c595","name":"debug 9","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":760,"y":180,"wires":[]},{"id":"dfa465c64b4d1d55","type":"debug","z":"9c575b636ce2c595","name":"debug 10","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":760,"y":140,"wires":[]},{"id":"c6f3cf6a1bc3a2e4","type":"debug","z":"9c575b636ce2c595","name":"debug 11","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":760,"y":60,"wires":[]},{"id":"4e3485dd646e7b8f","type":"inject","z":"b2c910a3562c542e","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":100,"y":80,"wires":[["861c7e77bcb91e9a"]]},{"id":"861c7e77bcb91e9a","type":"change","z":"b2c910a3562c542e","name":"Set headers","rules":[{"t":"set","p":"headers","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"headers.x-ibm-client-id","pt":"msg","to":"bff6e089c937b9d710e68c00d5114654","tot":"str"},{"t":"set","p":"headers.x-ibm-client-secret","pt":"msg","to":"d3cc01f5aa2be9d4946b9bc5834ea739","tot":"str"},{"t":"set","p":"headers.x-nordea-originating-host","pt":"msg","to":"api.nordeaopenbanking.com","tot":"str"},{"t":"set","p":"req","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"req.method","pt":"msg","to":"GET","tot":"str"},{"t":"set","p":"req.url_path","pt":"msg","to":"https://api.nordeaopenbanking.com/corporate/premium/v3/accounts/DK5036579260-USD/transactions","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":270,"y":80,"wires":[["ed08e76cd0ce1272"]]},{"id":"ddc35a9a5a91faad","type":"comment","z":"b2c910a3562c542e","name":"Client Secret","info":"d3cc01f5aa2be9d4946b9bc5834ea739","x":90,"y":40,"wires":[]},{"id":"3a03364b05ae8878","type":"http request","z":"b2c910a3562c542e","name":"hent accounts","method":"GET","ret":"obj","paytoqs":"ignore","url":"https://api.nordeaopenbanking.com/corporate/premium/v3/accounts/DK5036579260-USD/transactions","tls":"","persist":false,"proxy":"","insecureHTTPParser":true,"authType":"","senderr":false,"headers":[],"x":540,"y":520,"wires":[["85c9beb86059aeef"]]},{"id":"85c9beb86059aeef","type":"debug","z":"b2c910a3562c542e","name":"Response","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":740,"y":520,"wires":[]},{"id":"5a652deda58405f0","type":"function","z":"b2c910a3562c542e","name":"Set Signature (header only)","func":"const keyId = msg.headers['x-ibm-client-id'];\nconst algorithm = 'rsa-sha256';\nconst signatureHeaders = '(request-target) x-nordea-originating-host x-nordea-originating-date';\nconst signature = msg.payload;\n\nmsg.headers.signature = `keyId=\"${keyId}\", algorithm=\"${algorithm}\", headers=\"${signatureHeaders}\", signature=\"${signature}\"`;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":300,"y":480,"wires":[["3a03364b05ae8878","879ac1791f06945f"]]},{"id":"c70d2adb7bc1cb1f","type":"comment","z":"b2c910a3562c542e","name":"\"Unspecified error with OBI authentication\"","info":"Mangler desuden data-parametre i url,\nsom sørger for at hente seneste hele \nhverdags posteringer.","x":360,"y":460,"wires":[]},{"id":"1c1a134df7329f8b","type":"function","z":"b2c910a3562c542e","name":"Base64 encoding","func":"const hash = Buffer.from(msg.payload);\nconst base64EncodedString = hash.toString('base64');\n\nmsg.payload = base64EncodedString;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":530,"y":300,"wires":[["5a652deda58405f0","eeae61e2c64e1863"]]},{"id":"568774a15c7eb8d8","type":"function","z":"b2c910a3562c542e","name":"Lav normalized string","func":"const requestTarget = msg.req.method.toLowerCase() + ' ' + msg.req.url_path;\nconst originatingHost = msg.headers['x-nordea-originating-host'];\nconst originatingDate = msg.headers['x-nordea-originating-date'];\n\nmsg.payload = `(request-target): ${requestTarget}\\n` +\n    `x-nordea-originating-host: ${originatingHost}\\n` +\n    `x-nordea-originating-date: ${originatingDate}`;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":540,"y":80,"wires":[["a592f8bba67125c8","12bc8e8aefd490c9"]]},{"id":"ed08e76cd0ce1272","type":"function","z":"b2c910a3562c542e","name":"Generér dato","func":"const date = new Date();\nconst formattedDate = date.toUTCString();\n\nmsg.headers['x-nordea-originating-date'] = formattedDate;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":270,"y":120,"wires":[["568774a15c7eb8d8"]]},{"id":"45326572719f9f2e","type":"comment","z":"b2c910a3562c542e","name":"Info","info":"Nordeas udviklere har bekræftet at dette er det rigtige format\ni normalized string. Altså key:pair som string'ed json array.","x":650,"y":60,"wires":[]},{"id":"eeae61e2c64e1863","type":"debug","z":"b2c910a3562c542e","d":true,"name":"debug 13","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":780,"y":300,"wires":[]},{"id":"9a89d35738489a69","type":"debug","z":"b2c910a3562c542e","d":true,"name":"debug 14","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":780,"y":260,"wires":[]},{"id":"a592f8bba67125c8","type":"debug","z":"b2c910a3562c542e","name":"debug 15","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":780,"y":80,"wires":[]},{"id":"ae33256ab3f888ba","type":"function","z":"b2c910a3562c542e","name":"Generate crypto key object","func":"// Generate an asymmetric key pair\n\nconst privateKeyObject = crypto.createPrivateKey({\n    key: msg.privateKey,\n});\n\n// Set flow variables\n\nflow.set(\"privateKey\", privateKeyObject);\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[{"var":"crypto","module":"crypto"}],"x":560,"y":200,"wires":[["048959f4a1ad4c54"]]},{"id":"12bc8e8aefd490c9","type":"change","z":"b2c910a3562c542e","name":"","rules":[{"t":"set","p":"privateKey","pt":"msg","to":"PRIVATEKEY_PEM","tot":"env","dc":true}],"action":"","property":"","from":"","to":"","reg":false,"x":530,"y":140,"wires":[["ae33256ab3f888ba"]]},{"id":"048959f4a1ad4c54","type":"function","z":"b2c910a3562c542e","name":"Kryptér payload","func":"// Encrypt data using the public key\nfunction encryptData(privateKey, data) {\n    const encryptedData = crypto.privateEncrypt(\n        {\n            key: privateKey\n        },\n        Buffer.from(data)\n    );\n    return encryptedData.toString(\"base64\");\n}\n\nvar encryptedText = encryptData(flow.get(\"privateKey\"), msg.payload);\nmsg.payload = encryptedText;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[{"var":"crypto","module":"crypto"}],"x":520,"y":260,"wires":[["1c1a134df7329f8b","9a89d35738489a69"]]},{"id":"879ac1791f06945f","type":"debug","z":"b2c910a3562c542e","name":"Hele beskeden","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":760,"y":480,"wires":[]},{"id":"d833b94ec6d2d1a9","type":"comment","z":"b2c910a3562c542e","name":"Info","info":"Miljøvariabel er gemt i Codespaces Secrets, defineret i docker-compose.yml.","x":630,"y":120,"wires":[]},{"id":"cfafdf414b23244a","type":"comment","z":"b2c910a3562c542e","name":"Info","info":"Denne node laver miljøvariablen fra forrige node om til et\ncrypto object i stedet for en string og gemmer som flow-variabel.\nSe evt. dokumentation på nettet for crypto.createPrivateKey.","x":690,"y":180,"wires":[]},{"id":"ae963b62e1ecc1f3","type":"comment","z":"b2c910a3562c542e","name":"Info","info":"Denne node laver miljøvariablen fra forrige node om til et\ncrypto object i stedet for en string og gemmer som flow-variabel.\nSe evt. dokumentation på nettet for crypto.createPrivateKey.","x":610,"y":240,"wires":[]},{"id":"55215f254a48839d","type":"hmac","z":"9f33e58b08cc00ae","name":"Hash msg.normalizedString","algorithm":"HmacSHA256","key":"key","value":"normalizedString","x":480,"y":120,"wires":[["681abc14e70fe9b9","aa2e66a085e63eaf"]]},{"id":"bf7a886ca6cb2dae","type":"change","z":"9f33e58b08cc00ae","name":"","rules":[{"t":"set","p":"normalizedString","pt":"msg","to":"(request-target) x-nordea-originating-host x-nordea-originating-date","tot":"str"},{"t":"set","p":"key","pt":"msg","to":"-----BEGIN PRIVATE KEY-----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-----END PRIVATE KEY-----","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":260,"y":120,"wires":[["55215f254a48839d"]]},{"id":"42d11647cf6cb4b8","type":"inject","z":"9f33e58b08cc00ae","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"Yes","payloadType":"str","x":90,"y":120,"wires":[["bf7a886ca6cb2dae"]]},{"id":"25cf929de2b4c598","type":"debug","z":"9f33e58b08cc00ae","name":"debug 5","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":940,"y":120,"wires":[]},{"id":"681abc14e70fe9b9","type":"function","z":"9f33e58b08cc00ae","name":"function 2","func":"const hash = Buffer.from(msg.payload);\nconst base64EncodedString = hash.toString('base64');\n\nmsg.signature = base64EncodedString;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":720,"y":120,"wires":[["25cf929de2b4c598"]]},{"id":"aa2e66a085e63eaf","type":"debug","z":"9f33e58b08cc00ae","name":"debug 6","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":720,"y":160,"wires":[]},{"id":"7af232c21d2318bf","type":"http in","z":"0bc16db685bd2e6a","name":"","url":"/:any","method":"get","upload":false,"swaggerDoc":"","x":140,"y":180,"wires":[["90c6e6935c71b31c"]]},{"id":"c10aec9905cba606","type":"template","z":"0bc16db685bd2e6a","name":"JS","field":"payload.javascript","fieldType":"msg","format":"javascript","syntax":"mustache","template":"//\n// HTTP Request\n//\n\n// Function to send encrypted data to backend\n// This function will automatically retrieve missing public key before sending data\n\nasync function encryptedPostRequest(request, data)\n{\n  // If there is no public key, retrieve it\n  await\n  getPublicKeyAsync()\n  .catch(error => console.log(\"Error importing public key: \" + error))\n\n  // Encrypt data\n  .then(publicKey => encryptDataAsync(publicKey, data))\n  .catch(error => console.log(\"Error encrypting data: \" + error))\n  \n  // Send encrypted data to backend\n  .then(encryptedData => postRequestAsync(request, encryptedData))\n  .catch(error => console.log(\"HTTP post error: \" + error))\n                        \n  // Handle HTTP response\n  .then(response => handleResponseDefault(response));\n  \n}\n\n// Post request async - not encrypted, for requests containing data use encryptedPostRequest instead\n\nasync function postRequestAsync(request, data = {})\n{\n  const response = await fetch(\"/_request\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"request\": request,\n      \"data\": data\n    })\n  });\n\n  const responseObj = await response.json();\n  return responseObj;\n}\n\n// Handle HTTP response\n// Handle default\n\nfunction handleResponseDefault(responseObj)\n{\n  console.log(responseObj.request + \": \" + responseObj.response);\n}\n\n//\n// Crypto\n//\n\nvar _publicKey = null;\n\n// Import\n\nasync function getPublicKeyAsync(forceImport = false)\n{\n  const importedKey = \n  // Request public key if missing\n  (_publicKey == null || _publicKey == undefined || forceImport) ?\n  \n  await\n    // Get public key (HTTP request)\n    postRequestAsync(\"getPublicKey\")\n    .catch(error => console.log(\"HTTP getPublicKey request error: \" + error))\n\n    // Get the PEM string from the response variable in HTTP response object\n    .then(response => response.response)\n\n    // Import key from PEM string\n    .then(response => importKeyAsync(response))\n    .catch(error => console.log(\"Import key error: \" + error))\n\n    // Set and return public key as cryptoKey object\n    .then(keyObject =>\n    {\n      _publicKey = keyObject;\n      return keyObject;\n    })\n\n    // If key already exists, return it instead\n    : _publicKey;\n\n    return importedKey;\n\n}\n\n// Function for importing key and converting to cryptoKey object - Do not call this function directly, use importPublicKeyAsync();\n\nasync function importKeyAsync(pemKey)\n{\n  // Fetch the ArrayBuffer of the key\n  const keyString = pemKey\n    .replace(\"-----BEGIN PUBLIC KEY-----\", \"\")\n    .replace(\"-----END PUBLIC KEY-----\", \"\")\n    .replace(/\\n/g, \"\");\n  const keyBuffer = Uint8Array.from(atob(keyString), c => c.charCodeAt(0)).buffer;\n\n  //const response = await fetch(pemKey); \n  //const keyBuffer = await response.arrayBuffer();\n\n  // Import the key using the Web Crypto API\n  const crypto = window.crypto.subtle;\n  const importedKey = await crypto.importKey(\n    \"spki\",\n    keyBuffer,\n    {\n      name: \"RSA-OAEP\",\n      hash: \"SHA-256\"\n    },\n    true,\n    [\"encrypt\"]\n  );\n\n  return importedKey;\n}\n\n// Encrypt\n\nasync function encryptDataAsync(publicKey, data)\n{\n  if (publicKey == null || publicKey == undefined)\n  {\n    console.log(\"Attempted to encrypt data but public key was null or undefined\");\n    return;\n  }\n  \n  // Convert the data to a Uint8Array\n  const dataString = JSON.stringify(data);\n  const dataBuffer = new TextEncoder().encode(dataString);\n\n  // Encrypt the data using the public key\n  const crypto = window.crypto.subtle;\n  const encryptedData = await crypto.encrypt(\n    {\n      name: \"RSA-OAEP\"\n    },\n    publicKey,\n    dataBuffer\n  );\n\n  // Return the encrypted data as a base64-encoded string\n  const base64String = btoa(String.fromCharCode(...new Uint8Array(encryptedData)));\n  return base64String;\n}\n\n\n\n\n\n//\n// Start\n\nencryptedPostRequest(\"uploadData\", \"Her er en tekst-streng med æ ø og å\");\nencryptedPostRequest(\"uploadData\", {\n  \"object\": {\n    \"list\": [\n      12, 45, 12, 31\n    ],\n    \"status\": \"ok\"\n  }\n});","output":"str","x":510,"y":180,"wires":[["ab3c382d844a0976"]]},{"id":"c3876d6450ff6eb2","type":"http response","z":"0bc16db685bd2e6a","name":"","statusCode":"","headers":{},"x":1130,"y":180,"wires":[]},{"id":"ab3c382d844a0976","type":"template","z":"0bc16db685bd2e6a","name":"CSS","field":"payload.style","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"","output":"str","x":690,"y":180,"wires":[["e5c2d7fbb8ad50b2"]]},{"id":"e5c2d7fbb8ad50b2","type":"template","z":"0bc16db685bd2e6a","name":"HTML","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!DOCTYPE html>\n<html>\n    <head>\n        <style type=\"text/css\">\n{{{payload.style}}}\n        </style>\n        <script type=\"application/javascript\">\n{{{payload.javascript}}}\n        </script>\n    </head>\n<body>\n\n<h1>My First Heading</h1>\n<p>My first paragraph.</p>\n\n</body>\n</html>","output":"str","x":850,"y":180,"wires":[["c3876d6450ff6eb2","e7392728b4698670"]]},{"id":"1f89911e49c2c23a","type":"debug","z":"0bc16db685bd2e6a","name":"HTTP IN","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":520,"y":140,"wires":[]},{"id":"71b009d2dc511028","type":"debug","z":"0bc16db685bd2e6a","name":"HTTP OUT","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1150,"y":220,"wires":[]},{"id":"fe04aff90f2dfec6","type":"http in","z":"0bc16db685bd2e6a","name":"","url":"/_request","method":"post","upload":false,"swaggerDoc":"","x":160,"y":420,"wires":[["d936eead42eaacd0","e6b520f4c062a924"]]},{"id":"d936eead42eaacd0","type":"debug","z":"0bc16db685bd2e6a","name":"POST IN","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":420,"y":380,"wires":[]},{"id":"50266d8bdc73b7d5","type":"http response","z":"0bc16db685bd2e6a","name":"","statusCode":"","headers":{},"x":1370,"y":380,"wires":[]},{"id":"3e3a2119b6ce7876","type":"change","z":"0bc16db685bd2e6a","name":"Set PEM as response","rules":[{"t":"set","p":"payload.response","pt":"msg","to":"publicPem","tot":"flow","dc":true}],"action":"","property":"","from":"","to":"","reg":false,"x":740,"y":380,"wires":[["44fade9967adb646"]]},{"id":"4842e2c0b66c1e52","type":"function","z":"0bc16db685bd2e6a","g":"db28c2d0ad9574a4","name":"Generate crypto key pair","func":"\nreturn msg;","outputs":1,"noerr":0,"initialize":"// Generate an asymmetric key pair\n\nfunction generateKeyPair() {\n    const { publicKey, privateKey } = crypto.generateKeyPairSync(\n        'rsa',\n        {\n            modulusLength: 2048,\n        }\n    );\n    return { publicKey, privateKey };\n}\n\nconst { publicKey, privateKey } = generateKeyPair();\n\n/// Export a key in a format that can be imported using the Web Crypto API\n\nfunction exportPublicKey()\n{\n    const exportedKey = publicKey.export({\n        type: 'spki',\n        format: 'pem'\n    });\n    return exportedKey;\n}\n\n// Set flow variables\n\nflow.set(\"publicKey\", publicKey);\nflow.set(\"privateKey\", privateKey);\n\nflow.set(\"publicPem\", exportPublicKey());","finalize":"","libs":[{"var":"crypto","module":"crypto"}],"x":190,"y":600,"wires":[[]]},{"id":"b12bf8d6248b5c12","type":"function","z":"0bc16db685bd2e6a","name":"Encrypt decrypt test","func":"// Encrypt data using the public key\nfunction encryptData(publicKey, data)\n{\n    const encryptedData = crypto.publicEncrypt(\n        {\n            key: publicKey,\n            padding: crypto.constants.RSA_PKCS1_OAEP_PADDING,\n            oaepHash: \"sha256\",\n        },\n        Buffer.from(data)\n    );\n    return encryptedData.toString(\"base64\");\n}\n\n// Decrypt data using the private key\nfunction decryptData(privateKey, encryptedData)\n{\n    const decryptedData = crypto.privateDecrypt(\n        {\n            key: privateKey,\n            padding: crypto.constants.RSA_PKCS1_OAEP_PADDING,\n            oaepHash: \"sha256\",\n        },\n        Buffer.from(encryptedData, \"base64\")\n    );\n    return decryptedData.toString();\n}\n\n\nvar startText = \"Hello worldy\";\nmsg.payload.startText = startText;\n\nvar encryptedText = encryptData(flow.get(\"publicKey\"), startText);\nmsg.payload.encryptedText = encryptedText;\n\nvar decryptedText = decryptData(flow.get(\"privateKey\"), encryptedText);\nmsg.payload.decryptedText = decryptedText;\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[{"var":"crypto","module":"crypto"}],"x":360,"y":860,"wires":[["1775d79a74efb84d"]]},{"id":"7588aeb165c5b697","type":"inject","z":"0bc16db685bd2e6a","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{}","payloadType":"json","x":150,"y":860,"wires":[["b12bf8d6248b5c12"]]},{"id":"1775d79a74efb84d","type":"debug","z":"0bc16db685bd2e6a","name":"Encrypt decrypt test debug","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":620,"y":860,"wires":[]},{"id":"41f8b116d6ce67c1","type":"debug","z":"0bc16db685bd2e6a","name":"POST OUT","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1390,"y":420,"wires":[]},{"id":"e6b520f4c062a924","type":"switch","z":"0bc16db685bd2e6a","name":"","property":"payload.request","propertyType":"msg","rules":[{"t":"eq","v":"getPublicKey","vt":"str"},{"t":"eq","v":"uploadData","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":410,"y":420,"wires":[["aa7509d32bbd6a28"],["85de60ed3c367397"]]},{"id":"afb3f33566f5fa50","type":"change","z":"0bc16db685bd2e6a","name":"Set response","rules":[{"t":"set","p":"payload.response","pt":"msg","to":"data modtaget","tot":"str","dc":true},{"t":"delete","p":"payload.data","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":870,"y":460,"wires":[["160b4ec1b061d426"]]},{"id":"2ade7add94445e2c","type":"comment","z":"0bc16db685bd2e6a","name":"getPublicKey","info":"","x":710,"y":340,"wires":[]},{"id":"d606a5bfc0c35082","type":"comment","z":"0bc16db685bd2e6a","name":"uploadData","info":"","x":710,"y":440,"wires":[]},{"id":"70fb91ddec980afe","type":"function","z":"0bc16db685bd2e6a","name":"Decrypt data","func":"// Decrypt data using the private key\nfunction decryptData(privateKey, encryptedData)\n{\n    const decryptedData = crypto.privateDecrypt(\n        {\n            key: privateKey,\n            padding: crypto.constants.RSA_PKCS1_OAEP_PADDING,\n            oaepHash: \"sha256\",\n        },\n        Buffer.from(encryptedData, \"base64\")\n    );\n    return decryptedData.toString();\n}\n\nvar decryptedData = decryptData(flow.get(\"privateKey\"), msg.payload.data);\n\nmsg.payload.decryptedData = decryptedData;\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[{"var":"crypto","module":"crypto"}],"x":710,"y":480,"wires":[["9c7c33c9fb8cb50e"]]},{"id":"3641e43ccd705cfd","type":"debug","z":"0bc16db685bd2e6a","name":"Decrypted data","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload.decryptedData","targetType":"msg","statusVal":"","statusType":"auto","x":720,"y":560,"wires":[]},{"id":"4379f40937a19194","type":"http in","z":"0bc16db685bd2e6a","name":"","url":"/test","method":"get","upload":false,"swaggerDoc":"","x":140,"y":140,"wires":[["90c6e6935c71b31c"]]},{"id":"9c7c33c9fb8cb50e","type":"json","z":"0bc16db685bd2e6a","name":"","property":"payload.decryptedData","action":"obj","pretty":true,"x":690,"y":520,"wires":[["780d218ed88acd1b"]]},{"id":"780d218ed88acd1b","type":"change","z":"0bc16db685bd2e6a","name":"Clean response JSON object","rules":[{"t":"set","p":"payload.decryptedData","pt":"msg","to":"$keys(payload.decryptedData) = \"object\" ?\tpayload.decryptedData.object : payload.decryptedData","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":765,"y":520,"wires":[["3641e43ccd705cfd"]],"l":false},{"id":"bcc6dc16262d2eba","type":"comment","z":"0bc16db685bd2e6a","name":"POST Request IN","info":"","x":170,"y":380,"wires":[]},{"id":"8318fc615f5d0156","type":"comment","z":"0bc16db685bd2e6a","name":"GET Request IN","info":"","x":160,"y":100,"wires":[]},{"id":"98ead5170ca23623","type":"comment","z":"0bc16db685bd2e6a","g":"db28c2d0ad9574a4","name":"Asymmetrical encryption","info":"","x":190,"y":560,"wires":[]},{"id":"4dba92d8773986aa","type":"comment","z":"0bc16db685bd2e6a","name":"Encryption testing","info":"","x":170,"y":820,"wires":[]}]